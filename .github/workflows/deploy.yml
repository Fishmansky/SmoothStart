name: Smoothstart CI CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker
      uses: docker/setup-buildx-action@v3

    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose
    
    - name: Create .env file
      run: |
        echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
        echo POSTGRES_HOST=${{ secrets.POSTGRES_HOST }} >> .env
        echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env
        echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
        echo REDIS_HOST=${{ secrets.REDIS_HOST }} >> .env
        echo REDIS_PORT=${{ secrets.REDIS_PORT }} >> .env
        echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env

    - name: Build
      run: make build

    - name: Run
      run: make run
  
  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Prepare tar package
        run: |
          mkdir ../deploy
          cp -TR . ../deploy
          tar -cvf deploy.tar ../deploy/

      - name: Copy package
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "deploy.tar"
          target: ${{ secrets.TARGET_DIR }}
      
      - name: Untar package
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ${{ secrets.TARGET_DIR }}
            tar -xvf deploy.tar

      - name: Start application on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ${{ secrets.TARGET_DIR }}
            make build
            make run


